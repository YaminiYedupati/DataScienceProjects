/*		
-----------------------------------------------------------------------------------------------------------------------------------
                                                         Queries                                           
-----------------------------------------------------------------------------------------------------------------------------------*/

-- Viewing all tables data
USE project;
select * from customer_t;
select * from order_t;
select * from product_t;
select * from shipper_t;

-- Basic business overview

-- 1. Total revenue generated by company for all orders placed.

select sum(quantity *(vehicle_price - ((discount/100) * vehicle_price)))/1000000 as revenue 
from order_t;

-- 2. Total orders placed.

select count(order_id) as order_count
from order_t;

-- 3. Total customers registered with the company.

select count(customer_id) as customer_count
from customer_t;

-- 4. Average rating on a scale of 1 to 5. Legends considered: Very bad: 1, Bad: 2, Okay: 3, Good: 4, Very good: 5

with rating as
(select quarter_number, 
		case 
        when lower(customer_feedback) = lower('Very bad') then 1 
        when lower(customer_feedback) = lower('bad') then 2
        when lower(customer_feedback) = lower('okay') then 3
        when lower(customer_feedback) = lower('good') then 4
        when lower(customer_feedback) = lower('very good') then 5
        else -1 
        end customer_rating 
        from order_t)
select avg(customer_rating) average_rating 
from rating;

-- 5. total revenue in last quarter

select sum(quantity *(vehicle_price - ((discount/100) * vehicle_price)))/1000000 as last_quarter_revenue 
from order_t 
where quarter_number = 4;

-- 6.Last quarter orders

select count(order_id) last_quarter_orders 
from order_t 
where quarter_number = 4;

-- 7. Average days taken to ship

select avg(datediff(ship_date, order_date)) average_days_taken_to_ship 
from order_t;

-- 8.% good feedback. Percentage of customers who have given good or very good feedback.

select 
(select count(customer_feedback) 
from order_t 
where customer_feedback in (lower('good'), lower('very good')))
/count(customer_feedback) * 100 percentage_good_feedback 
from order_t; 

-- 9. average revenue in each quarter

select quarter_number, round(avg((vehicle_price - (discount * vehicle_price))),2) average_revenue_in_quarter 
from order_t 
group by quarter_number
order by quarter_number;


-- 10. total shippers

select count(shipper_id) shipper_count from shipper_t;
 
-- 11. most ordered product 

select p.vehicle_maker, p.vehicle_model, count(o.product_id) most_ordered_product
from order_t o join product_t p using (product_id) 
group by o.product_id
order by count(o.product_id) desc;

-- 12. most prefered shipper

select s.shipper_name, count(o.shipper_id) no_of_times_shipper_used
from shipper_t s join order_t o on s.shipper_id = o.shipper_id
group by o.shipper_id
order by count(o.shipper_id) desc;

/*-- QUESTIONS RELATED TO CUSTOMERS
     [Q1] What is the distribution of customers across states?
     For each state, customer count has been calculated.*/

select 
state, count(customer_id) as customer_count
from customer_t
group by state
order by customer_count desc;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q2] What is the average rating in each quarter?
-- Very Bad is 1, Bad is 2, Okay is 3, Good is 4, Very Good is 5.

Used CTE named table to store the encodings of feedback as mentioned. 
This CTE is used in calculating the average rating given by customers in each quarter.*/

with rating as
(select quarter_number, case 
        when lower(customer_feedback) = lower('Very bad') then 1 
        when lower(customer_feedback) = lower('bad') then 2
        when lower(customer_feedback) = lower('okay') then 3
        when lower(customer_feedback) = lower('good') then 4
        when lower(customer_feedback) = lower('very good') then 5
        else -1 end customer_rating from order_t
)
select quarter_number, round(avg(customer_rating),2) average_rating from rating 
group by quarter_number
order by quarter_number;


-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q3] Are customers getting more dissatisfied over time?

Used CTEs that store the counts of all ratings and each rating for each quarter.
These CTEs are used to calculate the percentages of all individual feebacks in all quarters.*/

with overall_quarter_rating as
(select quarter_number, count(customer_feedback) overall_rating
from order_t group by quarter_number),
very_good_rating as 
(select quarter_number, count(customer_feedback) very_good_rating
from order_t where lower(customer_feedback) = lower('Very good') group by quarter_number),
good_rating as 
(select quarter_number, count(customer_feedback) good_rating
from order_t where lower(customer_feedback) = lower('good') group by quarter_number),
okay_rating as 
(select quarter_number, count(customer_feedback) okay_rating
from order_t where lower(customer_feedback) = lower('okay') group by quarter_number),
bad_rating as 
(select quarter_number, count(customer_feedback) bad_rating
from order_t where lower(customer_feedback) = lower('bad') group by quarter_number),
very_bad_rating as 
(select quarter_number, count(customer_feedback) very_bad_rating
from order_t where lower(customer_feedback) = lower('Very bad') group by quarter_number)
select quarter_number, round(very_good_rating/overall_rating * 100,2) as very_good_percent, 
round(good_rating/overall_rating * 100,2) as good_percent,
round(okay_rating/overall_rating * 100,2) as okay_percent,
round(bad_rating/overall_rating * 100,2) as bad_percent,
round(very_bad_rating/overall_rating * 100,2) as very_bad_percent
from very_good_rating VGR join good_rating GR using (quarter_number) 
join okay_rating OKR using(quarter_number) 
join bad_rating BR using (quarter_number) 
join very_bad_rating VBR using (quarter_number)
join overall_quarter_rating using (quarter_number)
order by quarter_number;


-- ---------------------------------------------------------------------------------------------------------------------------------

/*[Q4] Which are the top 5 vehicle makers preferred by the customer.

products_t table and orders_t table are used to group the data based on vehicle maker and count the number of customers that ordered the car from the vehicle maker.*/

select p.vehicle_maker, count(customer_id) as customer_count 
from product_t p join order_t o using (product_id)
group by p.vehicle_maker
order by customer_count desc 
LIMIT 5;



-- ---------------------------------------------------------------------------------------------------------------------------------

/*[Q5] What is the most preferred vehicle make in each state?

Used the window function RANK() to rank based on the count of customers for each state and vehicle maker. 
After ranking, take the vehicle maker whose rank is 1.*/

select state, vehicle_maker from 
(
select state, vehicle_maker, count(P.vehicle_maker) vehicle_maker_count, rank() over (partition by C.State order by count(P.vehicle_maker) desc) vehicle_rank
from product_t P join order_t O using(product_id) 
join customer_t C 
using (customer_id)
group by C.State, P.vehicle_maker
) ranked_vehicle_makes_per_state
where ranked_vehicle_makes_per_state.vehicle_rank = 1;

-- ---------------------------------------------------------------------------------------------------------------------------------

/*QUESTIONS RELATED TO REVENUE and ORDERS 

-- [Q6] What is the trend of number of orders by quarters?

Count the number of orders for each quarter.*/

select quarter_number, count(order_id) order_count
from order_t
group by quarter_number
order by quarter_number;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q7] What is the quarter over quarter % change in revenue? 

 Quarter over Quarter percentage change in revenue means what is the change in revenue from the subsequent quarter to the previous quarter in percentage.
 2 CTEs are used 1. gives the quarterly revenue, second CTE lists the current and previous quarter revenues. 
 These values are used to calculate percentage change in revenue in the main query.
*/


with revenue as
(
select quarter_number, round(sum(quantity *(vehicle_price - ((discount/100) * vehicle_price))),2) as revenue_for_quarter 
from order_t 
group by quarter_number
),
revenue_trend as 
(
select quarter_number, revenue_for_quarter current_quarter_revenue, lag(revenue_for_quarter) over (order by quarter_number) previous_quarter_revenue 
from revenue
)
select quarter_number, current_quarter_revenue, previous_quarter_revenue, (((current_quarter_revenue - previous_quarter_revenue) / previous_quarter_revenue) * 100) as percentage_change_in_revenue
from revenue_trend 
order by quarter_number;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q8] What is the trend of revenue and orders by quarters?

Calculated sum of revenue and count the number of orders for each quarter.*/

select quarter_number,  round(sum(quantity *(vehicle_price - ((discount/100) * vehicle_price))),2) as total_revenue, count(order_id) as total_order_count
from order_t
group by quarter_number
order by quarter_number;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* QUESTIONS RELATED TO SHIPPING 
    [Q9] What is the average discount offered for different types of credit cards?

average of discount for each credit card type is retrieved.*/

select credit_card_type, round(avg(discount),2) as average_discount
from customer_t C join order_t O
using (customer_id)
group by C.credit_card_type
order by average_discount desc;

-- ---------------------------------------------------------------------------------------------------------------------------------

/* [Q10] What is the average time taken to ship the placed orders for each quarters?
	 Used the dateiff function to find the difference between the ship date and the order date in days.
*/

select quarter_number, round(avg(datediff(ship_date, order_date))) average_ship_time_taken_in_days
from order_t
group by quarter_number
order by quarter_number;


-- --------------------------------------------------------Done----------------------------------------------------------------------
-- ----------------------------------------------------------------------------------------------------------------------------------

-- Queries for insights and recommendations:

-- Average discount availed by customers who rated 'bad' vs customers who rated 'good'

select avg(discount) avg_bad_rating_discount  from order_t where customer_feedback like '%Bad%';
select avg(discount) avg_good_rating_discount from order_t where customer_feedback like '%Good%';

-- Average ship time taken in days for customers who rated Bad vs customers who rated good.

select avg(datediff(ship_date, order_date)) avg_bad_ship_days  from order_t where customer_feedback like '%Bad%';
select avg(datediff(ship_date, order_date)) avg_good_ship_days from order_t where customer_feedback like '%Good%';

-- All details of customers who rated Bad vs customers who rated Good.
select *  from order_t where customer_feedback like '%Bad%';
select *  from order_t where customer_feedback like '%Good%';




